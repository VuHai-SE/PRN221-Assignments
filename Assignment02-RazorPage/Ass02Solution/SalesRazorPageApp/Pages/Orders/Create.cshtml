@page
@model SalesRazorPageApp.Pages.Orders.CreateModel
@{
    ViewData["Title"] = "Create Order";
}

<h1>Create Order</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div class="form-group">
                <label asp-for="Order.MemberId" class="control-label">Member</label>
                <select asp-for="Order.MemberId" class="form-control" asp-items="Model.Members"></select>
                <span asp-validation-for="Order.MemberId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.OrderDate" class="control-label"></label>
                <input asp-for="Order.OrderDate" class="form-control" />
                <span asp-validation-for="Order.OrderDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.RequiredDate" class="control-label"></label>
                <input asp-for="Order.RequiredDate" class="form-control" />
                <span asp-validation-for="Order.RequiredDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.ShippedDate" class="control-label"></label>
                <input asp-for="Order.ShippedDate" class="form-control" />
                <span asp-validation-for="Order.ShippedDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.Freight" class="control-label"></label>
                <input asp-for="Order.Freight" class="form-control" />
                <span asp-validation-for="Order.Freight" class="text-danger"></span>
            </div>

            <h4>Order Details</h4>
            <div id="orderDetailsContainer">
                <div class="form-group orderDetail">
                    <label>Product</label>
                    <select name="ProductId" class="form-control">
                        @foreach (var product in Model.Products)
                        {
                            <option value="@product.ProductId">@product.ProductName</option>
                        }
                    </select>
                    <label>Unit Price</label>
                    <input type="text" name="UnitPrice" class="form-control" readonly />
                    <label>Quantity</label>
                    <input type="number" name="Quantity" class="form-control" />
                    <label>Discount</label>
                    <input type="number" step="0.01" name="Discount" class="form-control" />
                </div>
            </div>
            <button type="button" id="addOrderDetailButton" class="btn btn-secondary">Add Another Product</button>
            <br />
            <button type="submit" class="btn btn-primary">Create</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Serialize Model.Products to JSON and parse it in JavaScript
        var products = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Products));

        document.getElementById("addOrderDetailButton").addEventListener("click", function () {
            var container = document.getElementById("orderDetailsContainer");
            var newDetail = container.firstElementChild.cloneNode(true);
            container.appendChild(newDetail);
        });

        // Update Unit Price when Product changes
        document.getElementById("orderDetailsContainer").addEventListener("change", function (event) {
            if (event.target.name === "ProductId") {
                var unitPriceInput = event.target.closest(".orderDetail").querySelector("input[name='UnitPrice']");
                var productId = event.target.value;
                var product = products.find(p => p.ProductId == productId);
                unitPriceInput.value = product ? product.UnitPrice : '';
            }
        });
    </script>
}
